import React, { useEffect } from "react";
import { useState } from "react";
import { Loader, Card, FormField } from "../components";

const RenderCards = ({data, title}) => {
    if(data?.length > 0){
        return data.map((post)=> <Card key={post._id} {...post} />)
    }
    
    return (
        <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
    )
}

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, selAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("")
  const [searchResults, setSearchResults] = useState(null)
  const [searchTimeout, setSreachTimeout] = useState(null)

  const fetchPost = async()=>{
    setLoading(true)
    try {
      const response = fetch("http://localhost:8090/api/v1/post")
      response.then(res=> res.json()).then(res => selAllPosts(res.data.reverse()))
    } catch (error) {
      alert(error)
    }finally{
      setLoading(false)
    }
  }
  useEffect(()=>{
    fetchPost()
  },[])

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout)
    setSearchText(e.target.value)

    setSreachTimeout(
      setTimeout(()=>{
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase() || item.prompt.toLowerCase().includes(searchText.toLowerCase())) );
  
        setSearchResults(searchResult)
      }, 500)
    )
  }

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] tex-32px">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Browse through a collection of iniginary and visually stunning images
          generated by DALL-E AI
        </p>
      </div>

      <div className="mt-16">
        <FormField 
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <Loader className="flex justify-center items-center" />
        ) : (
          <>
            {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">Showing results for <span className="text-[#222328]">{searchText}</span></h2>
            )}

            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                    <RenderCards 
                        data={searchResults}
                        title="No searche results found"
                    />
                ) : (
                    <RenderCards 
                        data={allPosts}
                        title="No posts found"
                    />
                )}
            </div>
            {console.log("alPosts", allPosts)}
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
